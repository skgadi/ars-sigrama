async function serialPortList(){return api.send("serial-port",{c:0})}import{createApp,nextTick}from"../node_modules/vue/dist/vue.esm-browser.prod.js";let phaseColors=["#000","#f00","#00f","#eee"];console.log("000-vars.js");const app=createApp({data:()=>({menuItems:["Phasor diagram","Waveform","Harmonics Voltage (complete)","Harmonics Voltage (top-10)","Harmonics Voltage (table)","Harmonics Current (complete)","Harmonics Current (top-10)","Harmonics Current (table)","Power","Settings"],settings:{serial:{availablePorts:[],selectedPort:null},updateGraphTimer:{id:null,interval:2}},waveform:{stepTime:-1,voltage:[[]],current:[[]],time:[]},harmonics:{fundamentalFrequency:-1,voltage:{amplitude:[[]],phase:[[]]},current:{amplitude:[[]],phase:[[]]},frequencies:[],frequenciesNumber:[]},selectedMenuItem:-1,menuPixelsOffset:250,phasorDiagram:null,waveformDiagram:null,harmonicsDiagram:null,harmonicsDiagramTop:null,harmonicsDiagramCurrent:null,harmonicsDiagramTopCurrent:null}),watch:{selectedMenuItem:async function(t){0===t&&(await nextTick(),this.resizeRequired(),this.phasorDiagram&&this.phasorDiagram.close(),this.phasorDiagram=new phasorDiagram(document.getElementById("canvas-phasor-diagram"),this.harmonics)),1===t&&(await nextTick(),this.resizeRequired(),this.waveformDiagram&&this.waveformDiagram.close(),this.waveformDiagram=new waveformDiagram(document.getElementById("div-waveform-diagram"),this.waveform)),2===t&&(await nextTick(),this.resizeRequired(),this.harmonicsDiagram&&this.harmonicsDiagram.close(),this.harmonicsDiagram=new harmonicsBarsFull(document.getElementById("div-harmonics-voltage-histogram-complete"),this.harmonics)),3===t&&(await nextTick(),this.resizeRequired(),this.harmonicsDiagramTop&&this.harmonicsDiagramTop.close(),this.harmonicsDiagramTop=new harmonicsBarsTop(document.getElementById("div-harmonics-voltage-histogram-top"),this.harmonics,10)),5===t&&(await nextTick(),this.resizeRequired(),this.harmonicsDiagramCurrent&&this.harmonicsDiagramCurrent.close(),this.harmonicsDiagramCurrent=new harmonicsBarsFullCurrent(document.getElementById("div-harmonics-current-histogram-complete"),this.harmonics)),6===t&&(await nextTick(),this.resizeRequired(),this.harmonicsDiagramTopCurrent&&this.harmonicsDiagramTopCurrent.close(),this.harmonicsDiagramTopCurrent=new harmonicsBarsTopCurrent(document.getElementById("div-harmonics-current-histogram-top"),this.harmonics,10))},"settings.updateGraphTimer.interval":{deep:!0,handler:async function(t,e){this.updateTheDataFromTheMachine()}}},mounted(){console.log("mounted"),this.refreshSerialPorts(),this.updateTheDataFromTheMachine()},methods:{resizeRequired:function(){this.updateAllGraphs(!0)},updateAllGraphs:function(t=!1){let e=document.getElementById("canvas-phasor-diagram");e&&(e.style.width=window.innerWidth-this.menuPixelsOffset+"px",e.style.height=window.innerHeight+"px",this.phasorDiagram&&this.phasorDiagram.close(),this.phasorDiagram=new phasorDiagram(e,this.harmonics)),e=document.getElementById("div-waveform-diagram"),e&&(e.style.width=window.innerWidth-this.menuPixelsOffset+"px",e.style.height=window.innerHeight+"px",e.hasChildNodes()?this.waveformDiagram.updateChart(this.waveform):this.waveformDiagram=new waveformDiagram(e,this.waveform)),e=document.getElementById("div-harmonics-voltage-histogram-complete"),e&&(e.style.width=window.innerWidth-this.menuPixelsOffset+"px",e.style.height=window.innerHeight+"px",e.hasChildNodes()?this.harmonicsDiagram.updateChart(this.harmonics):this.harmonicsDiagram=new harmonicsBarsFull(e,this.harmonics)),e=document.getElementById("div-harmonics-voltage-histogram-top"),e&&(e.style.width=window.innerWidth-this.menuPixelsOffset+"px",e.style.height=window.innerHeight+"px",e.hasChildNodes()?this.harmonicsDiagramTop.updateChart(this.harmonics):this.harmonicsDiagramTop=new harmonicsBarsTop(e,this.harmonics,10)),e=document.getElementById("div-harmonics-current-histogram-complete"),e&&(e.style.width=window.innerWidth-this.menuPixelsOffset+"px",e.style.height=window.innerHeight+"px",e.hasChildNodes()?this.harmonicsDiagramCurrent.updateChart(this.harmonics):this.harmonicsDiagramCurrent=new harmonicsBarsFullCurrent(e,this.harmonics)),e=document.getElementById("div-harmonics-current-histogram-top"),e&&(e.style.width=window.innerWidth-this.menuPixelsOffset+"px",e.style.height=window.innerHeight+"px",e.hasChildNodes()?this.harmonicsDiagramTopCurrent.updateChart(this.harmonics):this.harmonicsDiagramTopCurrent=new harmonicsBarsTopCurrent(e,this.harmonics,10))},refreshSerialPorts:async function(){let t=await api.send("serial-port",{c:0});this.settings.serial.availablePorts=t,t.length>0&&(this.settings.serial.selectedPort||(this.settings.serial.selectedPort=t[0].path))},sendReceive:async function(){let t=await api.send("serial-port",{c:1,path:this.settings.serial.selectedPort,data:"3"});console.log("response: ",t)},updateTheDataFromTheMachine:async function(){this.settings.updateGraphTimer.id&&clearInterval(this.settings.updateGraphTimer.id),this.settings.updateGraphTimer.id=setInterval(async()=>{let t=await api.send("serial-port",{c:1,path:this.settings.serial.selectedPort,data:"3"});t.length>0&&8200===t[0].length?(this.processInputFromMachine(t[0].buffer),this.updateAllGraphs()):console.log("unexpected response")},1e3*this.settings.updateGraphTimer.interval)},processInputFromMachine:function(t){this.waveform.voltage=[],this.waveform.current=[],this.harmonics.voltage.amplitude=[[]],this.harmonics.voltage.phase=[[]],this.harmonics.current.amplitude=[[]],this.harmonics.current.phase=[[]],this.waveform.time=[],this.harmonics.frequencies=[],this.harmonics.frequenciesNumber=[];const e=128,i=4;let a=0;const s=new DataView(t);this.harmonics.fundamentalFrequency=s.getFloat32(a,!0),a+=4,this.waveform.stepTime=s.getFloat32(a,!0),a+=4;for(let t=0;t<e;t++)this.waveform.time[t]=t*this.waveform.stepTime;for(let t=0;t<e/2;t++)this.harmonics.frequencies[t]=t*this.harmonics.fundamentalFrequency,this.harmonics.frequenciesNumber[t]=t;for(let t=0;t<i;t++)this.waveform.voltage[t]=[],this.waveform.current[t]=[];for(let t=0;t<e;t++){for(let e=0;e<i;e++)this.waveform.voltage[e][t]=s.getFloat32(a,!0),a+=4;for(let e=0;e<i;e++)this.waveform.current[e][t]=s.getFloat32(a,!0),a+=4}for(let t=0;t<e/2;t++){this.harmonics.voltage.amplitude[t]=[];for(let e=0;e<i;e++)this.harmonics.voltage.amplitude[t][e]=s.getFloat32(a,!0),a+=4;this.harmonics.current.amplitude[t]=[];for(let e=0;e<i;e++)this.harmonics.current.amplitude[t][e]=s.getFloat32(a,!0),a+=4}for(let t=0;t<e/2;t++){this.harmonics.voltage.phase[t]=[];for(let e=0;e<i;e++)this.harmonics.voltage.phase[t][e]=s.getFloat32(a,!0),a+=4;this.harmonics.current.phase[t]=[];for(let e=0;e<i;e++)this.harmonics.current.phase[t][e]=s.getFloat32(a,!0),a+=4}for(let t=0;t<3;t++);}}}).mount("#app");class phasorDiagram{constructor(t,e){this.canvas=t,this.harmonics=e,this.preparePolarChartBackground(),this.plotHarmonics(),this.placeCenterPin()}preparePolarChartBackground(){this.canvas.width=this.canvas.clientWidth,this.canvas.height=this.canvas.clientHeight,this.ctx=this.canvas.getContext("2d");let t=this.canvas.height,e=this.canvas.width;this.centerX=e/2,this.centerY=t/2;let i=Math.min(e,t);this.lineSizeThickest=i/100,this.lineSizeThick=this.lineSizeThickest/2,this.lineSizeThin=this.lineSizeThickest/4,this.blankFillColor="#fff",this.fullRadius=i/2-.075*i,this.ctx.beginPath(),this.ctx.arc(this.centerX,this.centerY,this.fullRadius,0,2*Math.PI,!1),this.ctx.lineWidth=this.lineSizeThickest,this.ctx.stroke(),this.ctx.closePath(),this.ctx.beginPath(),this.ctx.arc(this.centerX,this.centerY,.75*this.fullRadius,0,2*Math.PI,!1),this.ctx.lineWidth=this.lineSizeThin,this.ctx.stroke(),this.ctx.beginPath(),this.ctx.arc(this.centerX,this.centerY,.5*this.fullRadius,0,2*Math.PI,!1),this.ctx.lineWidth=this.lineSizeThick,this.ctx.stroke(),this.ctx.beginPath(),this.ctx.arc(this.centerX,this.centerY,.25*this.fullRadius,0,2*Math.PI,!1),this.ctx.lineWidth=this.lineSizeThin,this.ctx.stroke(),this.ctx.closePath(),this.ctx.beginPath(),this.ctx.moveTo(this.centerX-this.fullRadius,this.centerY),this.ctx.lineTo(this.centerX+this.fullRadius,this.centerY),this.ctx.lineWidth=this.lineSizeThick,this.ctx.stroke(),this.ctx.closePath(),this.ctx.beginPath(),this.ctx.moveTo(this.centerX,this.centerY-this.fullRadius),this.ctx.lineTo(this.centerX,this.centerY+this.fullRadius),this.ctx.lineWidth=this.lineSizeThick,this.ctx.stroke(),this.ctx.closePath(),this.ctx.beginPath(),this.ctx.moveTo(this.centerX-.866*this.fullRadius,this.centerY-.5*this.fullRadius),this.ctx.lineTo(this.centerX+.866*this.fullRadius,this.centerY+.5*this.fullRadius),this.ctx.lineWidth=this.lineSizeThin,this.ctx.stroke(),this.ctx.closePath(),this.ctx.beginPath(),this.ctx.moveTo(this.centerX-.5*this.fullRadius,this.centerY-.866*this.fullRadius),this.ctx.lineTo(this.centerX+.5*this.fullRadius,this.centerY+.866*this.fullRadius),this.ctx.lineWidth=this.lineSizeThin,this.ctx.stroke(),this.ctx.closePath(),this.ctx.beginPath(),this.ctx.moveTo(this.centerX-.5*this.fullRadius,this.centerY+.866*this.fullRadius),this.ctx.lineTo(this.centerX+.5*this.fullRadius,this.centerY-.866*this.fullRadius),this.ctx.lineWidth=this.lineSizeThin,this.ctx.stroke(),this.ctx.closePath(),this.ctx.beginPath(),this.ctx.moveTo(this.centerX-.866*this.fullRadius,this.centerY+.5*this.fullRadius),this.ctx.lineTo(this.centerX+.866*this.fullRadius,this.centerY-.5*this.fullRadius),this.ctx.lineWidth=this.lineSizeThin,this.ctx.stroke(),this.ctx.closePath(),this.fontSize=.03*i,this.font=this.fontSize+"px Arial",this.ctx.font=this.font,this.ctx.textAlign="center",this.ctx.textBaseline="middle";let a=this.fullRadius+.03*i;this.ctx.fillText("0°",this.centerX+a,this.centerY),this.ctx.fillText("30°",this.centerX+.866*a,this.centerY-.5*a),this.ctx.fillText("60°",this.centerX+.5*a,this.centerY-.866*a),this.ctx.fillText("90°",this.centerX,this.centerY-a),this.ctx.fillText("120°",this.centerX-.5*a,this.centerY-.866*a),this.ctx.fillText("150°",this.centerX-.866*a,this.centerY-.5*a),this.ctx.fillText("180°",this.centerX-a,this.centerY),this.ctx.fillText("210°",this.centerX-.866*a,this.centerY+.5*a),this.ctx.fillText("240°",this.centerX-.5*a,this.centerY+.866*a),this.ctx.fillText("270°",this.centerX,this.centerY+a),this.ctx.fillText("300°",this.centerX+.5*a,this.centerY+.866*a),this.ctx.fillText("330°",this.centerX+.866*a,this.centerY+.5*a)}placeArrowOnPolarChart(t,e,i,a=0){let s=Math.abs(e),h=this.fullRadius/12,n=20*Math.PI/180,r=s-h*Math.cos(n);this.ctx.beginPath(),this.ctx.moveTo(this.centerX,this.centerY);let l=this.centerX+r*Math.cos(t),o=this.centerY-r*Math.sin(t);this.ctx.lineTo(l,o),this.ctx.lineWidth=this.lineSizeThick,this.ctx.strokeStyle=i,this.ctx.stroke(),this.ctx.closePath(),this.ctx.beginPath(),l=this.centerX+s*Math.cos(t),o=this.centerY-s*Math.sin(t),this.ctx.moveTo(l,o);let c=l-h*Math.cos(t+n),d=o+h*Math.sin(t+n);this.ctx.lineTo(c,d);let m=l-h*Math.cos(t-n),u=o+h*Math.sin(t-n);this.ctx.lineTo(m,u),this.ctx.lineTo(l,o),this.ctx.lineWidth=this.lineSizeThick,a?(this.ctx.lineWidth=0,this.ctx.fillStyle=i,this.ctx.fill()):(this.ctx.fillStyle=this.blankFillColor,this.ctx.lineWidth=this.lineSizeThick,this.ctx.fill(),this.ctx.stroke()),this.ctx.closePath()}placeCenterPin(){this.ctx.beginPath(),this.ctx.arc(this.centerX,this.centerY,5,0,2*Math.PI,!1),this.ctx.lineWidth=1,this.ctx.fillStyle="#000",this.ctx.fill(),this.ctx.closePath()}close(){}plotHarmonics(){if(this.harmonics.voltage.amplitude.length!==this.harmonics.voltage.phase.length)return void console.error("Voltage amplitude and phase arrays have different length");if(this.harmonics.current.amplitude.length!==this.harmonics.current.phase.length)return void console.error("Current amplitude and phase arrays have different length");if(this.harmonics.voltage.amplitude.length!==this.harmonics.current.amplitude.length)return void console.error("Voltage and current amplitude arrays have different length");if(this.harmonics.voltage.amplitude.length<2)return void console.error("Voltage amplitude doesn't contain the fundament frequency");if(this.harmonics.current.amplitude.length<2)return void console.error("Current amplitude doesn't contain the fundament frequency");let t=0;for(let e=0;e<this.harmonics.voltage.amplitude[1].length;e++)t<this.harmonics.voltage.amplitude[1][e]&&(t=this.harmonics.voltage.amplitude[1][e]);t=this.getNearestScaleValue(t);let e=0;for(let t=0;t<this.harmonics.current.amplitude[1].length;t++)e<this.harmonics.current.amplitude[1][t]&&(e=this.harmonics.current.amplitude[1][t]);e=this.getNearestScaleValue(e);for(let e=0;e<this.harmonics.voltage.amplitude[1].length;e++){let i=this.harmonics.voltage.phase[1][e],a=this.fullRadius*this.harmonics.voltage.amplitude[1][e]/t;this.placeArrowOnPolarChart(i,a,phaseColors[e],0)}for(let t=0;t<this.harmonics.current.amplitude[1].length;t++){let i=this.harmonics.current.phase[1][t],a=this.fullRadius*this.harmonics.current.amplitude[1][t]/e;this.placeArrowOnPolarChart(i,a,phaseColors[t],1)}this.ctx.font=this.font,this.ctx.fillStyle="#000",this.ctx.textAlign="left",this.ctx.textBaseline="top",this.ctx.fillText("Voltage",10,10),this.ctx.fillText("Scale: "+t+" V",10,10+this.fontSize);for(let t=0;t<this.harmonics.voltage.amplitude[1].length;t++)this.ctx.beginPath(),this.ctx.strokeStyle=phaseColors[t],this.ctx.fillStyle=this.blankFillColor,this.ctx.moveTo(10,10+(t+3)*this.fontSize-this.lineSizeThick),this.ctx.lineTo(10+this.fontSize,10+(t+3)*this.fontSize-this.lineSizeThick),this.ctx.lineTo(10+this.fontSize/2,10+(t+2)*this.fontSize+this.lineSizeThick),this.ctx.lineTo(10,10+(t+3)*this.fontSize-this.lineSizeThick),this.ctx.closePath(),this.ctx.fill(),this.ctx.stroke(),this.ctx.fillStyle=phaseColors[t],this.ctx.fillText("V"+(t+1)+" = "+Math.round(10*this.harmonics.voltage.amplitude[1][t])/10+" V",10+this.fontSize,10+(t+2)*this.fontSize);this.ctx.font=this.font,this.ctx.fillStyle="#000",this.ctx.textAlign="right",this.ctx.textBaseline="top",this.ctx.fillText("Current",this.canvas.width-10,10),this.ctx.fillText("Scale: "+e+" mA",this.canvas.width-10,10+this.fontSize);for(let t=0;t<this.harmonics.current.amplitude[1].length;t++)this.ctx.beginPath(),this.ctx.strokeStyle=phaseColors[t],this.ctx.fillStyle=phaseColors[t],this.ctx.moveTo(this.canvas.width-10,10+(t+3)*this.fontSize-this.lineSizeThick),this.ctx.lineTo(this.canvas.width-10-this.fontSize,10+(t+3)*this.fontSize-this.lineSizeThick),this.ctx.lineTo(this.canvas.width-10-this.fontSize/2,10+(t+2)*this.fontSize+this.lineSizeThick),this.ctx.lineTo(this.canvas.width-10,10+(t+3)*this.fontSize-this.lineSizeThick),this.ctx.closePath(),this.ctx.fill(),this.ctx.fillStyle=phaseColors[t],this.ctx.fillText("I"+(t+1)+" = "+Math.round(10*this.harmonics.current.amplitude[1][t])/10+" mA",this.canvas.width-10-this.lineSizeThick-this.fontSize,10+(t+2)*this.fontSize);this.ctx.font=this.font,this.ctx.fillStyle="#000",this.ctx.textAlign="right",this.ctx.textBaseline="bottom",this.ctx.fillText("F = "+(Math.round(100*this.harmonics.fundamentalFrequency)/100).toFixed(2)+" Hz",this.canvas.width-10,this.canvas.height-10)}getNearestScaleValue(t){return t<100?10*Math.ceil(t/10):50*Math.ceil(t/50)}}window.onresize=function(){app.resizeRequired()};class waveformDiagram{constructor(t,e){this.parent=t,this.canvas=document.createElement("canvas"),this.parent.appendChild(this.canvas),this.canvas.width=this.parent.clientWidth,this.canvas.height=this.parent.clientHeight,this.waveformData=e,this.genereateData(),this.generateConfi(),this.chart=new Chart(this.canvas,this.config),Object.seal(this.chart)}updateChart(t){this.waveformData=t;let e=[];for(let t=0;t<this.chart.data.datasets.length;t++)this.chart.getDatasetMeta(t).hidden&&e.push(t);this.genereateData();for(let t=0;t<e.length;t++)e[t]<this.chart.data.datasets.length&&(this.datasets[e[t]].hidden=!0);this.chart.data=this.data,this.chart.update();for(let t=0;t<e.length;t++)e[t]<this.chart.data.datasets.length&&(this.chart.getDatasetMeta(e[t]).hidden=!0)}close(){this.removeAllChildNodes()}removeAllChildNodes(){for(;this.parent.firstChild;)this.parent.removeChild(this.parent.firstChild)}genereateData(){this.datasets=[];for(let t=0;t<this.waveformData.voltage.length;t++)this.datasets.push({label:"V_"+(t+1).toString(),data:this.waveformData.voltage[t],borderColor:phaseColors[t],backgroundColor:phaseColors[t],showLine:!0,yAxisID:"voltage"});for(let t=0;t<this.waveformData.current.length;t++)this.datasets.push({label:"I_"+(t+1).toString(),data:this.waveformData.current[t],borderColor:phaseColors[t],backgroundColor:phaseColors[t],showLine:!0,yAxisID:"current",borderDash:[5,5]});this.data={labels:this.waveformData.time,datasets:this.datasets}}generateConfi(){this.config={type:"scatter",data:this.data,options:{maintainAspectRatio:!1,animation:{duration:0},elements:{point:{radius:0}},responsive:!0,interaction:{mode:"index",intersect:!1},stacked:!1,plugins:{title:{display:!0,text:"Waveform Diagram"}},scales:{x:{type:"linear",display:!0,position:"bottom",title:{display:!0,text:"Time in milli seconds"}},voltage:{type:"linear",display:!0,position:"left",title:{display:!0,text:"Volt"}},current:{type:"linear",display:!0,position:"right",title:{display:!0,text:"milli Ampere"},grid:{drawOnChartArea:!1}}}}}}}class harmonicsBarsFullCurrent{constructor(t,e){this.parent=t,this.canvas=document.createElement("canvas"),this.parent.appendChild(this.canvas),this.canvas.width=this.parent.clientWidth,this.canvas.height=this.parent.clientHeight,this.harmonicsData=e,this.genereateData(),this.generateConfi(),this.chart=new Chart(this.canvas,this.config),Object.seal(this.chart)}updateChart(t){this.harmonicsData=t;let e=[];for(let t=0;t<this.chart.data.datasets.length;t++)this.chart.getDatasetMeta(t).hidden&&e.push(t);this.genereateData();for(let t=0;t<e.length;t++)e[t]<this.chart.data.datasets.length&&(this.datasets[e[t]].hidden=!0);this.chart.data=this.data,this.prepareChartXTitle(),this.chart.update();for(let t=0;t<e.length;t++)e[t]<this.chart.data.datasets.length&&(this.chart.getDatasetMeta(e[t]).hidden=!0)}close(){this.removeAllChildNodes()}removeAllChildNodes(){for(;this.parent.firstChild;)this.parent.removeChild(this.parent.firstChild)}genereateData(){this.datasets=[];let t=[];if(this.harmonicsData.voltage.amplitude.length>0)for(let e=0;e<this.harmonicsData.voltage.amplitude[0].length;e++)t[e]=[];for(let e=0;e<this.harmonicsData.voltage.amplitude.length;e++)for(let i=0;i<this.harmonicsData.voltage.amplitude[e].length;i++)t[i][e]=this.harmonicsData.voltage.amplitude[e][i];for(let e=0;e<t.length;e++)this.datasets.push({label:"V_"+(e+1).toString(),data:t[e],borderColor:phaseColors[e],backgroundColor:phaseColors[e],showLine:!0,yAxisID:"voltage"});this.data={labels:this.harmonicsData.frequenciesNumber,datasets:this.datasets}}generateConfi(){this.config={type:"bar",data:this.data,options:{maintainAspectRatio:!1,animation:{duration:0},elements:{point:{radius:0}},responsive:!0,interaction:{mode:"index",intersect:!1},stacked:!1,plugins:{title:{display:!0,text:"Displaying all the harmonics"}},scales:{x:{type:"linear",display:!0,position:"bottom",title:{display:!0,text:"Harmonics multiples of fundamental frequency = "+Math.round(this.harmonicsData.fundamentalFrequency).toFixed(2)+" Hz"}},voltage:{type:"linear",display:!0,position:"left",title:{display:!0,text:"Volt"}}}}}}prepareChartXTitle(){this.chart.options.scales.x.title.text="Harmonics multiples of fundamental frequency = "+Math.round(this.harmonicsData.fundamentalFrequency).toFixed(2)+" Hz"}}class harmonicsBarsFull{constructor(t,e){this.parent=t,this.canvas=document.createElement("canvas"),this.parent.appendChild(this.canvas),this.canvas.width=this.parent.clientWidth,this.canvas.height=this.parent.clientHeight,this.harmonicsData=e,this.genereateData(),this.generateConfi(),this.chart=new Chart(this.canvas,this.config),Object.seal(this.chart)}updateChart(t){this.harmonicsData=t;let e=[];for(let t=0;t<this.chart.data.datasets.length;t++)this.chart.getDatasetMeta(t).hidden&&e.push(t);this.genereateData();for(let t=0;t<e.length;t++)e[t]<this.chart.data.datasets.length&&(this.datasets[e[t]].hidden=!0);this.chart.data=this.data,this.prepareChartXTitle(),this.chart.update();for(let t=0;t<e.length;t++)e[t]<this.chart.data.datasets.length&&(this.chart.getDatasetMeta(e[t]).hidden=!0)}close(){this.removeAllChildNodes()}removeAllChildNodes(){for(;this.parent.firstChild;)this.parent.removeChild(this.parent.firstChild)}genereateData(){this.datasets=[];let t=[];if(this.harmonicsData.voltage.amplitude.length>0)for(let e=0;e<this.harmonicsData.voltage.amplitude[0].length;e++)t[e]=[];for(let e=0;e<this.harmonicsData.voltage.amplitude.length;e++)for(let i=0;i<this.harmonicsData.voltage.amplitude[e].length;i++)t[i][e]=this.harmonicsData.voltage.amplitude[e][i];for(let e=0;e<t.length;e++)this.datasets.push({label:"V_"+(e+1).toString(),data:t[e],borderColor:phaseColors[e],backgroundColor:phaseColors[e],showLine:!0,yAxisID:"voltage"});this.data={labels:this.harmonicsData.frequenciesNumber,datasets:this.datasets}}generateConfi(){this.config={type:"bar",data:this.data,options:{maintainAspectRatio:!1,animation:{duration:0},elements:{point:{radius:0}},responsive:!0,interaction:{mode:"index",intersect:!1},stacked:!1,plugins:{title:{display:!0,text:"Displaying all the harmonics"}},scales:{x:{type:"linear",display:!0,position:"bottom",title:{display:!0,text:"Harmonics multiples of fundamental frequency = "+Math.round(this.harmonicsData.fundamentalFrequency).toFixed(2)+" Hz"}},voltage:{type:"linear",display:!0,position:"left",title:{display:!0,text:"Volt"}}}}}}prepareChartXTitle(){this.chart.options.scales.x.title.text="Harmonics multiples of fundamental frequency = "+Math.round(this.harmonicsData.fundamentalFrequency).toFixed(2)+" Hz"}}class harmonicsBarsTopCurrent{constructor(t,e,i){this.barCount=i,this.parent=t,this.canvas=document.createElement("canvas"),this.parent.appendChild(this.canvas),this.canvas.width=this.parent.clientWidth,this.canvas.height=this.parent.clientHeight,this.harmonicsData=e,this.genereateData(),this.generateConfi(),this.chart=new Chart(this.canvas,this.config),this.chart.getDatasetMeta(3).hidden=!0,Object.seal(this.chart)}updateChart(t){this.harmonicsData=t;let e=[];for(let t=0;t<this.chart.data.datasets.length;t++)this.chart.getDatasetMeta(t).hidden&&e.push(t);this.genereateData();for(let t=0;t<e.length;t++)e[t]<this.chart.data.datasets.length&&(this.datasets[e[t]].hidden=!0);this.chart.data=this.data,this.prepareChartXTitle(),this.chart.update();for(let t=0;t<e.length;t++)e[t]<this.chart.data.datasets.length&&(this.chart.getDatasetMeta(e[t]).hidden=!0)}close(){this.removeAllChildNodes()}removeAllChildNodes(){for(;this.parent.firstChild;)this.parent.removeChild(this.parent.firstChild)}genereateData(){this.datasets=[];let t=[],e=[];for(let i=0;i<this.harmonicsData.voltage.amplitude.length;i++){if(1==i){for(let t=0;t<this.harmonicsData.voltage.amplitude[i].length;t++)e.push(this.harmonicsData.voltage.amplitude[i][t]);i++}t.push(i)}t.sort((t,e)=>this.harmonicsData.voltage.amplitude[e][0]-this.harmonicsData.voltage.amplitude[t][0]),t=t.slice(0,this.barCount);let i=[];if(!(this.harmonicsData.voltage.amplitude.length>0))return;for(let t=0;t<this.harmonicsData.voltage.amplitude[0].length;t++)i[t]=[];let a=[];for(let s=0;s<t.length;s++){a.push("H_"+t[s].toString());for(let a=0;a<this.harmonicsData.voltage.amplitude[0].length;a++)i[a][s]=this.harmonicsData.voltage.amplitude[t[s]][a]/e[a]*100}for(let t=0;t<i.length;t++)this.datasets.push({label:"V_"+(t+1).toString(),data:i[t],borderColor:phaseColors[t],backgroundColor:phaseColors[t],showLine:!0,yAxisID:"voltage %"});this.data={labels:a,datasets:this.datasets},console.log(this.data)}generateConfi(){this.config={type:"bar",data:this.data,options:{maintainAspectRatio:!1,animation:{duration:0},elements:{point:{radius:0}},responsive:!0,interaction:{mode:"index",intersect:!1},stacked:!1,plugins:{title:{display:!0,text:"Displaying all the harmonics"}},scales:{x:{title:{display:!0,text:"Harmonics multiples of fundamental frequency = "+Math.round(this.harmonicsData.fundamentalFrequency).toFixed(2)+" Hz"}},voltage:{type:"linear",display:!0,position:"left",title:{display:!0,text:"Volt"}}}}}}prepareChartXTitle(){this.chart.options.scales.x.title.text="Harmonics multiples of fundamental frequency = "+Math.round(this.harmonicsData.fundamentalFrequency).toFixed(2)+" Hz"}}class harmonicsBarsTop{constructor(t,e,i){this.barCount=i,this.parent=t,this.canvas=document.createElement("canvas"),this.parent.appendChild(this.canvas),this.canvas.width=this.parent.clientWidth,this.canvas.height=this.parent.clientHeight,this.harmonicsData=e,this.genereateData(),this.generateConfi(),this.chart=new Chart(this.canvas,this.config),this.chart.getDatasetMeta(3).hidden=!0,Object.seal(this.chart)}updateChart(t){this.harmonicsData=t;let e=[];for(let t=0;t<this.chart.data.datasets.length;t++)this.chart.getDatasetMeta(t).hidden&&e.push(t);this.genereateData();for(let t=0;t<e.length;t++)e[t]<this.chart.data.datasets.length&&(this.datasets[e[t]].hidden=!0);this.chart.data=this.data,this.prepareChartXTitle(),this.chart.update();for(let t=0;t<e.length;t++)e[t]<this.chart.data.datasets.length&&(this.chart.getDatasetMeta(e[t]).hidden=!0)}close(){this.removeAllChildNodes()}removeAllChildNodes(){for(;this.parent.firstChild;)this.parent.removeChild(this.parent.firstChild)}genereateData(){this.datasets=[];let t=[],e=[];for(let i=0;i<this.harmonicsData.voltage.amplitude.length;i++){if(1==i){for(let t=0;t<this.harmonicsData.voltage.amplitude[i].length;t++)e.push(this.harmonicsData.voltage.amplitude[i][t]);i++}t.push(i)}t.sort((t,e)=>this.harmonicsData.voltage.amplitude[e][0]-this.harmonicsData.voltage.amplitude[t][0]),t=t.slice(0,this.barCount);let i=[];if(!(this.harmonicsData.voltage.amplitude.length>0))return;for(let t=0;t<this.harmonicsData.voltage.amplitude[0].length;t++)i[t]=[];let a=[];for(let s=0;s<t.length;s++){a.push("H_"+t[s].toString());for(let a=0;a<this.harmonicsData.voltage.amplitude[0].length;a++)i[a][s]=this.harmonicsData.voltage.amplitude[t[s]][a]/e[a]*100}for(let t=0;t<i.length;t++)this.datasets.push({label:"V_"+(t+1).toString(),data:i[t],borderColor:phaseColors[t],backgroundColor:phaseColors[t],showLine:!0,yAxisID:"voltage %"});this.data={labels:a,datasets:this.datasets},console.log(this.data)}generateConfi(){this.config={type:"bar",data:this.data,options:{maintainAspectRatio:!1,animation:{duration:0},elements:{point:{radius:0}},responsive:!0,interaction:{mode:"index",intersect:!1},stacked:!1,plugins:{title:{display:!0,text:"Displaying all the harmonics"}},scales:{x:{title:{display:!0,text:"Harmonics multiples of fundamental frequency = "+Math.round(this.harmonicsData.fundamentalFrequency).toFixed(2)+" Hz"}},voltage:{type:"linear",display:!0,position:"left",title:{display:!0,text:"Volt"}}}}}}prepareChartXTitle(){this.chart.options.scales.x.title.text="Harmonics multiples of fundamental frequency = "+Math.round(this.harmonicsData.fundamentalFrequency).toFixed(2)+" Hz"}}